services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - media-files:/app/media
    networks:
      - default
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
  nats:
    container_name: nats
    image: nats:latest
    ports:
      - "4222:4222"
  postgres:
    container_name: database
    image: postgres
    ports:
      - 5432:5432
    env_file:
      - ./app/.env
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./app/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - default
    depends_on:
      - app
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    networks:
      - default
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana

volumes:
  postgres:
  media-files:
  grafana-data:

networks:
  default:
    driver: bridge
